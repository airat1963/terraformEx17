# Создание диска и виртуальной машины
resource "yandex_compute_disk" "boot_disk" {
  name     = "boot-disk"
  zone     = var.zone
  image_id = var.image_id
  size     = 30
}

resource "yandex_vpc_security_group" "instance" {
  name        = "otus-dataproc-network1"
  network_id  = "enp87354gds5trf8mko8"

  ingress {
    protocol       = "TCP"
    port           = 8080
    v4_cidr_blocks = ["0.0.0.0/0"]
  }
}

resource "yandex_compute_instance" "this" {
  name                      = var.instance_name
  allow_stopping_for_update = true
  platform_id               = "standard-v3"
  zone                      = var.zone
  service_account_id        = var.service_account_id
  metadata = {
    ssh-keys = "ubuntu:${file(var.public_key_path)}"
    

    user-data = <<-EOF
      #!/bin/bash
      mkdir -p /home/ubuntu/.ssh
      echo "${file(var.private_key_path)}" > /home/ubuntu/.ssh/dataproc
      chmod 600 /home/ubuntu/.ssh/dataproc
      chown ubuntu:ubuntu /home/ubuntu/.ssh/dataproc
      eval `ssh-agent -s`
      ssh-add /home/ubuntu/.ssh/dataproc
    EOF
    user-data1 = <<-EOF
      #!/bin/bash
      echo "Hello, World" > index.html
      nohup busybox httpd -f -p 8080 &

    EOF

  }

    
  scheduling_policy {
    preemptible = true
  }

  resources {
    cores  = "2"
    memory = "16"
  }

  boot_disk {
    disk_id = yandex_compute_disk.boot_disk.id
  }

  network_interface {
    subnet_id = var.subnet_id
    nat       = true
  }
  labels={
    name="terraform-example"
  }
}

# resource "yandex_vpc_network" "example_network" {

#   name="example-network"
  
# }

# resource "yandex_vpc_subnet" "example_subnet" {
#   name="example-subnet"
#   zone="ru-central1-b"
#   network_id= yandex_vpc_network.example_network.id
#   v4_cidr_blocks = [ "192.168.10.0/24" ]
  
# }